[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://v3wvmylpqv6y"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_p0lg0"]
parameter_name = "Texture2DParameter"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_67w0s"]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_a5yql"]
source = 5

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Texture2DParameter;



void fragment() {
// Input:3
	vec2 n_out3p0 = UV;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(Texture2DParameter, n_out3p0);


// Output:0
	COLOR.rgb = vec3(n_out4p0.xyz);


}
"
graph_offset = Vector2(78, 98)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(780, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_p0lg0")
nodes/fragment/2/position = Vector2(60, 260)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_67w0s")
nodes/fragment/3/position = Vector2(80, 140)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_a5yql")
nodes/fragment/4/position = Vector2(518, 283)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 2, 3, 0, 4, 0, 4, 0, 0, 0)
